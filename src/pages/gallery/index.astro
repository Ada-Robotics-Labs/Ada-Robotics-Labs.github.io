---
import { Container } from '@components/odyssey-theme';
import Layout from '../../layouts/Page.astro';

// 1. Importar as imagens da pasta /src/assets/gallery
const images = import.meta.glob('/src/assets/gallery/*.jpg', { eager: true });

// 2. Obter as chaves (caminhos) e mapear para os URLs corretos
const imagePaths = Object.keys(images);
const imageUrls = imagePaths.map(path => images[path].default);

const seo = {
  title: 'Gallery | Astro Odyssey Theme',
  description: 'A beautiful gallery of images.',
};
---

<Layout {seo}>
  <Container>
    <section class="gallery">
      <h2>Photo Gallery</h2>
      <div class="gallery-grid">
        {imageUrls.map((url, index) => (
          <img
            src={url}
            alt={`Gallery Image ${index + 1}`}
            class="gallery-item"
            onClick={() => window.openLightbox(index)}  <!-- Chama a função global -->
          />
        ))}
      </div>
    </section>
  </Container>

  <div id="lightbox" class="lightbox">
    <span class="close" onClick={() => window.closeLightbox()}>&times;</span>
    <img id="lightbox-img" class="lightbox-content" />
    <button class="prev" onClick={() => window.prevImage()}>&#10094;</button>
    <button class="next" onClick={() => window.nextImage()}>&#10095;</button>
  </div>
</Layout>

<style>
  .gallery {
    text-align: center;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 10px;
    padding: 20px;
  }

  .gallery-item {
    width: 100%;
    height: auto;
    cursor: pointer;
    border-radius: 8px;
    transition: transform 0.2s ease-in-out;
  }

  .gallery-item:hover {
    transform: scale(1.05);
  }

  .lightbox {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
  }

  .lightbox-content {
    max-width: 80%;
    max-height: 80%;
  }

  .close, .prev, .next {
    position: absolute;
    color: white;
    font-size: 2rem;
    cursor: pointer;
  }

  .close {
    top: 10px;
    right: 20px;
  }

  .prev {
    left: 10px;
  }

  .next {
    right: 10px;
  }
</style>

<script is:inline>
  // 3. Transformar a lista de URLs em array para o script
  //    (stringify no frontmatter e parse no script)
  const imagesArray = JSON.parse("{JSON.stringify(imageUrls)}");
  let currentImageIndex = 0;

  function openLightbox(index) {
    currentImageIndex = index;
    document.getElementById('lightbox').style.display = 'flex';
    document.getElementById('lightbox-img').src = imagesArray[index];
  }

  function closeLightbox() {
    document.getElementById('lightbox').style.display = 'none';
  }

  function prevImage() {
    currentImageIndex = (currentImageIndex - 1 + imagesArray.length) % imagesArray.length;
    document.getElementById('lightbox-img').src = imagesArray[currentImageIndex];
  }

  function nextImage() {
    currentImageIndex = (currentImageIndex + 1) % imagesArray.length;
    document.getElementById('lightbox-img').src = imagesArray[currentImageIndex];
  }

  // 4. Expor as funções no escopo global para que onClick() do HTML as encontre
  window.openLightbox = openLightbox;
  window.closeLightbox = closeLightbox;
  window.prevImage = prevImage;
  window.nextImage = nextImage;
</script>